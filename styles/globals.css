@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.141 0.005 285.823);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.141 0.005 285.823);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.141 0.005 285.823);
  --primary: oklch(0.21 0.006 285.885);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.967 0.001 286.375);
  --secondary-foreground: oklch(0.21 0.006 285.885);
  --muted: oklch(0.967 0.001 286.375);
  --muted-foreground: oklch(0.552 0.016 285.938);
  --accent: oklch(0.967 0.001 286.375);
  --accent-foreground: oklch(0.21 0.006 285.885);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.92 0.004 286.32);
  --input: oklch(0.92 0.004 286.32);
  --ring: oklch(0.705 0.015 286.067);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.141 0.005 285.823);
  --sidebar-primary: oklch(0.21 0.006 285.885);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.967 0.001 286.375);
  --sidebar-accent-foreground: oklch(0.21 0.006 285.885);
  --sidebar-border: oklch(0.92 0.004 286.32);
  --sidebar-ring: oklch(0.705 0.015 286.067);
}

.dark {
  --background: oklch(0.141 0.005 285.823);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.21 0.006 285.885);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.21 0.006 285.885);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.92 0.004 286.32);
  --primary-foreground: oklch(0.21 0.006 285.885);
  --secondary: oklch(0.274 0.006 286.033);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.274 0.006 286.033);
  --muted-foreground: oklch(0.705 0.015 286.067);
  --accent: oklch(0.274 0.006 286.033);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.552 0.016 285.938);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.21 0.006 285.885);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.274 0.006 286.033);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.552 0.016 285.938);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
/* Styles pour HoloPokemonCard */

.holo-card-container-wrapper {
  /* Nouveau wrapper pour la perspective et le padding */
  padding: 0.5rem; /* Espace autour de la carte */
  display: flex;
  justify-content: center;
  align-items: center;
  /* Ajoutez ici des styles pour la responsivité si la carte doit s'adapter à la grille */
  /* ex: width: 100%; max-width: ${cardWidth}px; */
}

.holo-card-perspective-container {
  /* Gère la perspective */
  perspective: 1000px;
  /* Ajoutez ici des styles pour la responsivity si nécessaire */
}

.holo-card-element {
  width: 240px; /* Conserve les dimensions fixes pour l'instant, à revoir pour la responsivité */
  height: 336px; /* Conserve les dimensions fixes pour l'instant, à revoir pour la responsivité */
  border-radius: 15px;
  transform-style: preserve-3d;
  will-change: transform;
  transition: transform 0.05s ease-out, box-shadow 0.2s ease-out;
  position: relative;
  overflow: hidden;
  box-shadow: 0px 8px 16px -4px rgba(0, 0, 0, 0.3);
  transform: rotateY(var(--ry)) rotateX(var(--rx)) scale(var(--s));
  background-color: #2d3748;
}

.holo-card-element.interacting {
  box-shadow: 0px 15px 30px -5px rgba(0, 0, 0, 0.5), 0 0 12px 2px var(--glow),
    0 0 24px 4px var(--glow, #69d1e980); /* Utilisation de la variable --glow */
}

.holo-card-content {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  border-radius: inherit;
}

.holo-card-image-container {
  width: 100%;
  height: 70%; /* L'image prend 70% de la hauteur de la carte */
  position: relative; /* Important pour les enfants positionnés absolument */
  overflow: hidden;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  background-color: #4a5568;
  transform-style: preserve-3d; /* Ajout pour permettre la 3D des enfants */
}

.holo-card-image-container img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  transform: translateZ(20px); /* Léger effet 3D pour l'image elle-même */
}

/* Styles pour les overlays - positionnés DANS le conteneur d'image */
.holo-card-image-container .holo-card-shine-overlay,
.holo-card-image-container .holo-card-glare-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; /* 100% du conteneur d'image */
  height: 100%; /* 100% du conteneur d'image */
  border-top-left-radius: inherit; /* Reprendre les coins supérieurs du parent */
  border-top-right-radius: inherit;
  border-bottom-left-radius: 0; /* Pas de coins arrondis en bas si l'image ne l'a pas */
  border-bottom-right-radius: 0;

  pointer-events: none;
  z-index: 1;
  opacity: var(--o);
  transition: opacity 0.2s ease-out;
  /* La translationZ est relative au conteneur d'image maintenant */
  transform: translateZ(10px);
}

.holo-card-image-container .holo-card-shine-overlay {
  --space: 2px;
  --h: 21;
  --s-hsl: 70%;
  --l-hsl: 50%;

  clip-path: inset(0); /* Couvre le conteneur d'image */

  background-image: repeating-linear-gradient(
      90deg,
      hsl(calc(var(--h) * 0), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 0),
      hsl(calc(var(--h) * 0), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 1),
      transparent calc(var(--space) * 1.001),
      transparent calc(var(--space) * 1.999),
      hsl(calc(var(--h) * 1), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 2),
      hsl(calc(var(--h) * 1), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 3),
      transparent calc(var(--space) * 3.001),
      transparent calc(var(--space) * 3.999),
      hsl(calc(var(--h) * 2), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 4),
      hsl(calc(var(--h) * 2), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 5),
      transparent calc(var(--space) * 5.001),
      transparent calc(var(--space) * 5.999),
      hsl(calc(var(--h) * 3), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 6),
      hsl(calc(var(--h) * 3), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 7),
      transparent calc(var(--space) * 7.001),
      transparent calc(var(--space) * 7.999),
      hsl(calc(var(--h) * 4), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 8),
      hsl(calc(var(--h) * 4), var(--s-hsl), var(--l-hsl)) calc(var(--space) * 9),
      transparent calc(var(--space) * 9.001),
      transparent calc(var(--space) * 9.999),
      hsl(calc(var(--h) * 5), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 10),
      hsl(calc(var(--h) * 5), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 11),
      transparent calc(var(--space) * 11.001),
      transparent calc(var(--space) * 11.999),
      hsl(calc(var(--h) * 6), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 12),
      hsl(calc(var(--h) * 6), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 13),
      transparent calc(var(--space) * 13.001),
      transparent calc(var(--space) * 13.999),
      hsl(calc(var(--h) * 7), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 14),
      hsl(calc(var(--h) * 7), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 15),
      transparent calc(var(--space) * 15.001),
      transparent calc(var(--space) * 15.999),
      hsl(calc(var(--h) * 8), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 16),
      hsl(calc(var(--h) * 8), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 17),
      transparent calc(var(--space) * 17.001),
      transparent calc(var(--space) * 17.999),
      hsl(calc(var(--h) * 9), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 18),
      hsl(calc(var(--h) * 9), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 19),
      transparent calc(var(--space) * 19.001),
      transparent calc(var(--space) * 19.999),
      hsl(calc(var(--h) * 10), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 20),
      hsl(calc(var(--h) * 10), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 21),
      transparent calc(var(--space) * 21.001),
      transparent calc(var(--space) * 21.999),
      hsl(calc(var(--h) * 11), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 22),
      hsl(calc(var(--h) * 11), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 23),
      transparent calc(var(--space) * 23.001),
      transparent calc(var(--space) * 23.999),
      hsl(calc(var(--h) * 12), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 24),
      hsl(calc(var(--h) * 12), var(--s-hsl), var(--l-hsl))
        calc(var(--space) * 25)
    ),
    radial-gradient(
      farthest-corner circle at var(--mx) var(--my),
      rgba(255, 255, 255, 0.8) 0%,
      rgba(255, 255, 255, 0.3) 30%,
      rgba(0, 0, 0, 0.3) 90% /* Moins de noir opaque */
    );
  background-blend-mode: overlay, overlay;
  background-position: center, var(--posx) var(--posy); /* Ces variables sont définies sur la carte principale */
  background-size: 100% 100%, 220% 220%;
  filter: brightness(calc((var(--hyp) + 0.8) * 0.8)) contrast(1.8) saturate(1.2);
  mix-blend-mode: color-dodge;
}

.holo-card-image-container .holo-card-glare-overlay {
  background-image: radial-gradient(
    farthest-corner circle at var(--mx) var(--my),
    /* Ces variables sont définies sur la carte principale */
      rgba(255, 255, 255, 0.5) 5%,
    rgba(255, 255, 255, 0.2) 20%,
    rgba(0, 0, 0, 0.6) 130%
  );
  mix-blend-mode: overlay;
  opacity: calc(var(--o) * (var(--hyp) + 0.2));
}

.holo-card-info {
  padding: 0.75rem;
  text-align: center;
  width: 100%;
  background-color: rgba(
    23,
    37,
    64,
    0.85
  ); /* Bleu Nuit Profond semi-transparent */
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  color: #f7fafc;
  margin-top: auto;
  z-index: 2;
  position: relative;
  transform: translateZ(5px);
}

.holo-pokemon-name {
  font-family: "Poppins", sans-serif;
  font-weight: 600;
  font-size: 1.1rem;
  margin-bottom: 0.1rem;
  color: #edf2f7;
}

.holo-pokemon-number {
  font-family: "Roboto Mono", monospace;
  font-size: 0.8rem;
  color: #a0aec0;
  margin-bottom: 0.3rem;
}

.holo-pokemon-types {
  display: flex;
  justify-content: center;
  gap: 0.4rem;
}
